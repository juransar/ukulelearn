<?php

require_once '../bootstrap.php';

use Tester\Assert;
use Tester\Environment;
use App\Model\ArtistRepository;
use Tester\TestCase;
use Kdyby\Doctrine\EntityManager;
use App\Model\Artist;
/**
 * Class ArtistRepositoryTest
 */
class ArtistRepositoryTest extends TestCase
{
    public $artistRepository;
    /** @var Nette\DI\Container */
    private $container;


    public function __construct(Nette\DI\Container $container)
    {
        $this->container = $container;
        Tester\Environment::setup();

    }

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $entityManager = $this->container->getByType(EntityManager::class);
        $this->artistRepository=$this->container->getByType(ArtistRepository::class);//new ChordRepository($entityManager);
Tester\Environment::lock('database', __DIR__ . '\tmp');

    }

    public function testSaveArtist() {
        $artist=new Artist();
        $artist->setName("TestArtist");
        $this->artistRepository->save($artist);
        $res=$this->artistRepository->findByName('TestArtist');
        Assert::notEqual(null,$res);
        $this->artistRepository->delete($res);

    }
   public function testUpdateArtist() {
        $artist=new Artist();
        $artist->setName("TestArtist");
        $this->artistRepository->save($artist);
        $res=$this->artistRepository->findByName('TestArtist');
        $artist->setName("TestArtist2");
        $this->artistRepository->update($artist);
        $res=$this->artistRepository->findByName('TestArtist2');
        Assert::notEqual(null,$res);
        $res2=$this->artistRepository->findByName('TestArtist');
        Assert::null($res2);
        $this->artistRepository->delete($res);

    }
     public function testDeleteArtist() {
        $artist=new Artist();
        $artist->setName("TestArtist");
        $this->artistRepository->save($artist);
        $res=$this->artistRepository->findByName('TestArtist');
        $this->artistRepository->delete($res);
        $res=$this->artistRepository->findByName('TestArtist');
        Assert::null($res);
    }
    public function testFindByLetter() {
        $artist=new Artist();
        $artist->setName("TestArtist");
        $artist2=new Artist();
        $artist2->setName("TestArtist2");
        $this->artistRepository->save($artist);
        $this->artistRepository->save($artist2);
        $res=$this->artistRepository->findByLetter('T');
        Assert::notEqual(0, count($res));
        Assert::notEqual(1, count($res));
        $this->artistRepository->delete($res);
    }
}

# SpuÅ¡tÄ›nÃ­ testovacÃ­ch metod
$testCase = new ArtistRepositoryTest($container);
$testCase->run();