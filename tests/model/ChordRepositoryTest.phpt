<?php

require_once '../bootstrap.php';

use Tester\Assert;
use Tester\Environment;
use App\Model\ChordRepository;
use Tester\TestCase;
use Kdyby\Doctrine\EntityManager;
use App\Model\Chord;
/**
 * Class ChordRepositoryTest
 */
class ChordRepositoryTest extends TestCase
{
   public $chordRepository;
/** @var Nette\DI\Container */
    private $container;

    public function __construct(Nette\DI\Container $container)
    {
        $this->container = $container;
        Tester\Environment::setup();

    }

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
                $entityManager = $this->container->getByType(EntityManager::class);
                $this->chordRepository=$this->container->getByType(ChordRepository::class);//new ChordRepository($entityManager);
Tester\Environment::lock('database', __DIR__ . '/tmp');

    }

    public function testSaveChord() {
        $chord=new Chord();
        $chord->setName("TestChord");
        $chord->setNotation('1-2-3-4');
        $this->chordRepository->save($chord);
        $res=$this->chordRepository->findByName('TestChord');
        Assert::same($chord->getNotation(), $res->getNotation());
        $this->chordRepository->delete($res);

    }
    public function testUpdateChord() {
            $chord=new Chord();
            $chord->setName("TestChord");
            $chord->setNotation('1-2-3-4');
            $this->chordRepository->save($chord);
            $chord=$this->chordRepository->findByName('TestChord');
            $chord->setNotation('4-3-2-1');
            $this->chordRepository->update($chord);
            $res=$this->chordRepository->findByName('TestChord');
            Assert::same($chord->getNotation(), $res->getNotation());
            $this->chordRepository->delete($res);
        }
    public function testDeleteChord() {
                $chord=new Chord();
                $chord->setName("TestChord");
                $chord->setNotation('1-2-3-4');
                $this->chordRepository->save($chord);
                $res=$this->chordRepository->findByName('TestChord');
                $this->chordRepository->delete($res);
                $res=$this->chordRepository->findByName('TestChord');
                Assert::null($res);
            }

}

# SpuÅ¡tÄ›nÃ­ testovacÃ­ch metod
$testCase = new ChordRepositoryTest($container);
$testCase->run();